<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="com.moa.youthpolicy.policy.mapper.PolicyMapper">
	<select id="getfiveboard" resultType="com.moa.youthpolicy.policy.domain.PolicyVO">
		SELECT * FROM policy ORDER BY no DESC LIMIT 5
	</select>
	
	<select id="getListWithPasing" resultType="com.moa.youthpolicy.policy.domain.PolicyVO" parameterType="com.moa.youthpolicy.common.Criteria">
	    SELECT * FROM policy
	    WHERE no > 0
	    <if test="type != null and keyword != null and keyword != ''">
	        <choose>
	            <when test='type == ""'>
	                AND (policyNm LIKE CONCAT('%', #{keyword}, '%') OR policyCn LIKE CONCAT('%', #{keyword}, '%') or policyCnDtl LIKE CONCAT('%', #{keyword}, '%'))
	            </when>
	            <when test='type == "T"'>
	                AND policyNm LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	            <when test='type == "C"'>
	                AND (policyCn LIKE CONCAT('%', #{keyword}, '%') or policyCnDtl LIKE CONCAT('%', #{keyword}, '%'))
	            </when>
	        </choose>
	    </if>
	    <if test="rgnSeNm != null and rgnSeNm != ''">
	        AND rgnSeNm LIKE CONCAT('%', #{rgnSeNm}, '%')
	    </if>
	    <if test="policyTypeNm != null and policyTypeNm != ''">
	        AND policyTypeNm LIKE CONCAT('%', #{policyTypeNm}, '%')
	    </if>
	    <if test="selectedFilter == 'applyDate'">
	        AND aplyPsbltyYn = 'Y'
	    </if>
	    <if test="selectedFilter == 'overDate'">
	        AND aplyPsbltyYn = 'N'
	    </if>
	    ORDER BY
	    <choose>
	        <when test="selectedFilter == 'like'">
	            `like` DESC, policy.no DESC
	        </when>
	        <otherwise>
	            policy.no DESC
	        </otherwise>
	    </choose>
	    LIMIT #{start}, #{amount}
	</select>
	
	<select id="getTotalCount" resultType="int" parameterType="com.moa.youthpolicy.common.Criteria">
	    SELECT COUNT(no) FROM policy
	    WHERE no > 0
	    <if test="type != null and keyword != null and keyword != ''">
		    <choose>
	            <when test='type == ""'>
	                AND (policyNm LIKE CONCAT('%', #{keyword}, '%') OR policyCn LIKE CONCAT('%', #{keyword}, '%') or policyCnDtl LIKE CONCAT('%', #{keyword}, '%'))
	            </when>
	            <when test='type == "T"'>
	                AND policyNm LIKE CONCAT('%', #{keyword}, '%')
	            </when>
	            <when test='type == "C"'>
	                AND (policyCn LIKE CONCAT('%', #{keyword}, '%') or policyCnDtl LIKE CONCAT('%', #{keyword}, '%'))
	            </when>
	        </choose>
		</if>
	    <if test="rgnSeNm != null and rgnSeNm != ''">
	        AND rgnSeNm LIKE CONCAT('%', #{rgnSeNm}, '%')
	    </if>
	    <if test="policyTypeNm != null and policyTypeNm != ''">
	        AND policyTypeNm LIKE CONCAT('%', #{policyTypeNm}, '%')
	    </if>
	    <if test="selectedFilter == 'applyDate'">
	        AND aplyPsbltyYn = 'Y'
	    </if>
	    <if test="selectedFilter == 'overDate'">
	        AND aplyPsbltyYn = 'N'
	    </if>
	</select>
	
	<select id="getPolicy" resultType="com.moa.youthpolicy.policy.domain.PolicyVO" parameterType="Integer">
		SELECT * FROM policy
		WHERE no = #{no}
	</select>
	
	<select id="getBoard" resultType="com.moa.youthpolicy.policy.domain.PolicyBoardVO" parameterType="Integer">
		SELECT * FROM policyboard
		WHERE bno = #{no}
	</select> 
	
	<select id="getLike" resultType="com.moa.youthpolicy.common.LikeBoardVO" parameterType="com.moa.youthpolicy.common.LikeBoardVO">
		SELECT Email, bno FROM like_policy
	    WHERE Email LIKE #{Email} AND bno LIKE #{bno}
	</select>
	<!--  
	<select id="getCommentListWithPaging" resultType="PolicyCommentVO" parameterType="com.moa.youthpolicy.common.Criteria">
		SELECT * FROM policyboardcomments
		WHERE cno>0 AND bno=#{bno}
		ORDER BY cno DESC
		LIMIT #{start}, #{amount}
	</select>
	-->
	<select id="getCommentListWithPaging" resultType="PolicyCommentVO" parameterType="com.moa.youthpolicy.common.Criteria">
		SELECT * FROM policyboardcomments
		WHERE cno>0 AND bno=#{bno} AND isdeleted = 0
		AND cno NOT IN(
			SELECT * FROM(
				SELECT cno from policyboardcomments WHERE cno> 0 AND bno = #{bno} AND `like`>=10 ORDER BY `like` DESC LIMIT #{amountBestComment})
	 		as tmp
		)
		ORDER BY cno DESC
		LIMIT #{start}, #{amount}
	</select>
	
	<select id="getCommentTotalCount" resultType="int" parameterType="com.moa.youthpolicy.common.Criteria">
		SELECT COUNT(cno) FROM policyboardcomments
		WHERE bno=#{bno} AND isdeleted = 0
		AND cno NOT IN(
			SELECT * FROM(
				SELECT cno from policyboardcomments WHERE cno> 0 AND bno = #{bno} AND `like`>=10 ORDER BY `like` DESC LIMIT #{amountBestComment})
	 		as tmp
		)
	</select>
	
	<!-- 
	<select id="getCommentTotalCount" resultType="int" parameterType="PolicyBoardVO">
		SELECT COUNT(cno) FROM policyboardcomments
		WHERE bno=#{no}
	</select>
	 -->
	<select id="getBestCommentList" resultType="PolicyCommentVO" parameterType="com.moa.youthpolicy.common.Criteria">
		SELECT * FROM policyboardcomments
		WHERE cno>0 AND bno=#{bno} AND `like`>=10
		ORDER BY `like` DESC
		LIMIT #{amountBestComment}
	</select>
	
	<select id="getReportComment" resultType="com.moa.youthpolicy.common.CommentsReportVO" parameterType="com.moa.youthpolicy.common.CommentsReportVO">
		SELECT * FROM commentsreport
		WHERE reporter = #{reporter} AND boardType = #{boardType}
		    AND (boardType = "P" AND policycno = #{policycno})
		    OR (boardType = "T" AND tipcno = #{tipcno});		    
	</select>
	
	<select id="getLikeComment" resultType="com.moa.youthpolicy.common.LikeCommentVO" parameterType="com.moa.youthpolicy.common.LikeCommentVO">
		SELECT * FROM like_policyboardcomments
		WHERE cno = #{cno} AND Email = #{Email}
	</select>
	
	<select id="getComment" resultType="PolicyCommentVO" parameterType="Integer">
		SELECT * FROM policyboardcomments
		WHERE cno = #{cno}
	</select>
	
	
	
	<delete id="delLike" parameterType="com.moa.youthpolicy.common.LikeBoardVO">
		DELETE FROM like_policy
    	WHERE Email = #{Email} AND bno = #{bno}
	</delete>
	
	<delete id="delPolicy" parameterType="com.moa.youthpolicy.policy.domain.PolicyVO">
		DELETE FROM policy
		WHERE no = #{no}
	</delete>
	
	<insert id="addLike" parameterType="com.moa.youthpolicy.common.LikeBoardVO">
	    INSERT INTO like_policy (Email, bno)
	    VALUES (#{Email}, #{bno})
	</insert>
	
	<update id="modLike" parameterType="com.moa.youthpolicy.policy.domain.PolicyBoardVO">
	    UPDATE policy SET `like` = #{like}
	    WHERE no = #{no}
	</update>
	
	<update id="modLikeComment" parameterType="com.moa.youthpolicy.policy.domain.PolicyCommentVO">
		UPDATE policyboardcomments SET `like` = #{like}
		WHERE cno = #{cno}
	</update>
	
	<update id="modBoard" parameterType="com.moa.youthpolicy.policy.domain.PolicyVO">
        UPDATE policy
        SET aplyBgngDt = #{aplyBgngDt}, rgnSeNm = #{rgnSeNm},
        policyCn = #{policyCn}, sprvsnInstNm = #{sprvsnInstNm}, policyTypeNm = #{policyTypeNm}, policyScl = #{policyScl},
        aplyEndDt = #{aplyEndDt}, dtlLinkUrl = #{dtlLinkUrl}
        WHERE no = #{no}   
	</update>
	
	<update id="modp_Board" parameterType="com.moa.youthpolicy.policy.domain.PolicyBoardVO">
	    UPDATE policyboard
	    SET content = #{content}
	    WHERE bno = #{bno}   
	</update>

	<insert id="writePolicy" parameterType="com.moa.youthpolicy.policy.domain.PolicyVO"
		keyColumn="no" keyProperty="no" useGeneratedKeys="true">
		INSERT INTO policy
		(policyNm, rgnSeNm, sprvsnInstNm, policyTypeNm, policyCnDtl, aplyBgngDt, aplyEndDt
		,policyScl , dtlLinkUrl, policyEnq)
		values (#{policyNm}, #{rgnSeNm}, #{sprvsnInstNm} , #{policyTypeNm} , #{policyCnDtl}
		, #{aplyBgngDt}, #{aplyEndDt}, #{dtlLinkUrl}, #{policyScl}, #{policyEnq})
	</insert>
	
	<insert id="writePlicyBoard" parameterType="com.moa.youthpolicy.policy.domain.PolicyBoardVO">
		INSERT INTO policyboard
		(bno, content)
		values (#{bno}, #{content})
	</insert>
	
	<insert id="writeComment" parameterType="PolicyCommentVO">
		INSERT INTO policyboardcomments
		(content, bno, writer)
		values(#{content}, #{bno}, #{writer})
	</insert>	
	
	<insert id="reportcomment" parameterType="com.moa.youthpolicy.common.CommentsReportVO">
	    INSERT INTO commentsreport
	    (
	        <choose>
	            <when test='boardType == "P"'>
	                policycno,
	            </when>
	            <when test='boardType == "T"'>
	                tipcno,
	            </when>
	        </choose>
	        reasonCategory, reporter, reason, boardType)
	    VALUES
	    (
	        <choose>
	            <when test='boardType == "P"'>
	                #{policycno},
	            </when>
	            <when test='boardType == "T"'>
	                #{tipcno},
	            </when>
	        </choose>
	        #{reasonCategory}, #{reporter}, #{reason}, #{boardType})
	</insert>
		
	<insert id="addLikeComment" parameterType="com.moa.youthpolicy.common.LikeCommentVO">
		INSERT INTO like_policyboardcomments
		(cno, Email)
		values(#{cno}, #{Email})
	</insert>
	
	<delete id="deleteComment" parameterType="Integer">
		DELETE FROM policyboardcomments
		WHERE cno=#{cno}
	</delete>	
	
	<delete id="delLikeComment" parameterType="com.moa.youthpolicy.common.LikeCommentVO">
		DELETE FROM like_policyboardcomments
		WHERE cno = #{cno} AND Email = #{Email}
	</delete>
	
	<update id="modComment" parameterType="PolicyCommentVO">
		UPDATE policyboardcomments
		SET content=#{content}
		WHERE cno=#{cno}
	</update>
 
	<select id="chkUserType" resultType="int" parameterType="com.moa.youthpolicy.common.CommentsReportVO">
		SELECT userType FROM user
		WHERE nick =
		<if test='boardType=="T"'>
			(SELECT writer FROM tipboardcomments
			WHERE cno = #{tipcno})
		</if>
		<if test='boardType=="P"'>
			(SELECT writer FROM policyboardcomments
			WHERE cno = #{policycno})
		</if>

	</select>
	
	<select id="getImageUrl" resultType="String" parameterType="int">
    SELECT content AS imageUrl
    FROM policyboard
    WHERE bno = #{bno}
</select>


</mapper>